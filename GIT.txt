Logiciels de gestion de version :
- Modèle centralisé : SVN, CVS
- Modèle distribué : Git, Mercurial, Bazaar

Site Git pour Windows :
http://msysgit.github.io

Commandes Linux :
$ pwd -- permet de connaître le répertoire courant
$ ls -- liste les fichiers et répertoires dans le dossier courant
$ cd -- permet de de nous placer dans un répertoire
$ touch monfichier.extension -- permet de créer le fichier monfichier.extension
$ rm monfichier.extension -- supprime le fichier monfichier.extension
$ mkdir monrepertoire -- créer le dossier monrepertoire
$ cat monfichier.extension -- permet d'afficher le contenu d'un fichier

Commandes Git : Copier (Control + Inser) / Coller (Shift + Inser)
$ git config --global user.name "Votre nom ou pseudo"
$ git config --global user.email "votre@email.com"
$ git init // Créé un nouveau dépôt Git
$ git status // Inspecte l'état du contenu du répertoire de travail et de la zone de transfert
$ git add nom_du_fichier.html // Ajoute les fichiers du répertoire de travail à la zone de transfert
$ git diff // montre la différence entre le répertoire de travail et la zone de transfert
$ git commit -m "Votre message" // stocke en permanence les modifications de fichiers de la zone de transfert dans le dépôt
$ git log // affiche une liste de tous les précédants commit
$ git show HEAD
$ git checkout HEAD nom_de_fichier // annule les modifications dans le répertoire de travail
$ git reset HEAD nom_de_fichier // désactive les modifications de nom_de_fichier dans la zone de transfert
$ git reset commit_SHA // réinitialise le commit à une version précédente de voter historique
$ git add nom_de_fichier_1 nom_de_fichier_2 // ajoute les fichiers "nom_de_fichier_1" et "nom_de_fichier_2" au répertoire de travail
$ git add * // ajoute tous les fichiers au répertoire de travail
$ git branch // répertorie toutes les branches d'un projet Git
$ git branch nouvelle_branche // Créé une nouvelle branche "nouvelle_branche"
$ git checkout nouvelle_branche // Utilisé pour passer d'une branche à l'autre
$ git merge nom_de_branche // Fusionne les branches, joind les changements de fichiers d'une branche à l'autre
$ git branch -d nom_de_branche // Supprime la branche "nom_de_branche"



















